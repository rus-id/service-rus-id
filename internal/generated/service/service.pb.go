// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/service/service.proto

package service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetUserRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserRequest) Reset()         { *m = GetUserRequest{} }
func (m *GetUserRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserRequest) ProtoMessage()    {}
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c431c1298cc0dc39, []int{0}
}

func (m *GetUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserRequest.Unmarshal(m, b)
}
func (m *GetUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserRequest.Marshal(b, m, deterministic)
}
func (m *GetUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserRequest.Merge(m, src)
}
func (m *GetUserRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserRequest.Size(m)
}
func (m *GetUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserRequest proto.InternalMessageInfo

func (m *GetUserRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type GetUserReply struct {
	Empty                *empty.Empty `protobuf:"bytes,1,opt,name=empty,proto3" json:"empty,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetUserReply) Reset()         { *m = GetUserReply{} }
func (m *GetUserReply) String() string { return proto.CompactTextString(m) }
func (*GetUserReply) ProtoMessage()    {}
func (*GetUserReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_c431c1298cc0dc39, []int{1}
}

func (m *GetUserReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserReply.Unmarshal(m, b)
}
func (m *GetUserReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserReply.Marshal(b, m, deterministic)
}
func (m *GetUserReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserReply.Merge(m, src)
}
func (m *GetUserReply) XXX_Size() int {
	return xxx_messageInfo_GetUserReply.Size(m)
}
func (m *GetUserReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserReply proto.InternalMessageInfo

func (m *GetUserReply) GetEmpty() *empty.Empty {
	if m != nil {
		return m.Empty
	}
	return nil
}

func init() {
	proto.RegisterType((*GetUserRequest)(nil), "service.GetUserRequest")
	proto.RegisterType((*GetUserReply)(nil), "service.GetUserReply")
}

func init() { proto.RegisterFile("api/service/service.proto", fileDescriptor_c431c1298cc0dc39) }

var fileDescriptor_c431c1298cc0dc39 = []byte{
	// 211 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4c, 0x2c, 0xc8, 0xd4,
	0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x85, 0xd1, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42,
	0xec, 0x50, 0xae, 0x94, 0x74, 0x7a, 0x7e, 0x7e, 0x7a, 0x4e, 0xaa, 0x3e, 0x58, 0x38, 0xa9, 0x34,
	0x4d, 0x3f, 0x35, 0xb7, 0xa0, 0xa4, 0x12, 0xa2, 0x4a, 0x49, 0x93, 0x8b, 0xcf, 0x3d, 0xb5, 0x24,
	0xb4, 0x38, 0xb5, 0x28, 0x28, 0xb5, 0xb0, 0x34, 0xb5, 0xb8, 0x44, 0x48, 0x9c, 0x8b, 0xbd, 0xb4,
	0x38, 0xb5, 0x28, 0x3e, 0x33, 0x45, 0x82, 0x51, 0x81, 0x51, 0x83, 0x33, 0x88, 0x0d, 0xc4, 0xf5,
	0x4c, 0x51, 0xb2, 0xe1, 0xe2, 0x81, 0x2b, 0x2d, 0xc8, 0xa9, 0x14, 0xd2, 0xe1, 0x62, 0x05, 0x9b,
	0x04, 0x56, 0xc6, 0x6d, 0x24, 0xa6, 0x07, 0xb1, 0x47, 0x0f, 0x66, 0x8f, 0x9e, 0x2b, 0x48, 0x36,
	0x08, 0xa2, 0xc8, 0xc8, 0x97, 0x8b, 0xcf, 0xb1, 0xa8, 0x24, 0xb3, 0xb8, 0xa4, 0x38, 0x18, 0xe2,
	0x2e, 0x21, 0x6b, 0x2e, 0x76, 0xa8, 0x79, 0x42, 0xe2, 0x7a, 0x30, 0xb7, 0xa3, 0x3a, 0x46, 0x4a,
	0x14, 0x53, 0xa2, 0x20, 0xa7, 0x52, 0x89, 0xc1, 0x49, 0x26, 0x4a, 0x2a, 0x33, 0xaf, 0x24, 0xb5,
	0x28, 0x2f, 0x31, 0x47, 0x3f, 0x3d, 0x35, 0x2f, 0xb5, 0x28, 0xb1, 0x24, 0x35, 0x05, 0x16, 0x02,
	0x49, 0x6c, 0x60, 0x37, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xe1, 0x4c, 0xa1, 0x9a, 0x1f,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ArtistsServiceClient is the client API for ArtistsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ArtistsServiceClient interface {
	GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetUserReply, error)
}

type artistsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewArtistsServiceClient(cc grpc.ClientConnInterface) ArtistsServiceClient {
	return &artistsServiceClient{cc}
}

func (c *artistsServiceClient) GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetUserReply, error) {
	out := new(GetUserReply)
	err := c.cc.Invoke(ctx, "/service.ArtistsService/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ArtistsServiceServer is the server API for ArtistsService service.
type ArtistsServiceServer interface {
	GetUser(context.Context, *GetUserRequest) (*GetUserReply, error)
}

// UnimplementedArtistsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedArtistsServiceServer struct {
}

func (*UnimplementedArtistsServiceServer) GetUser(ctx context.Context, req *GetUserRequest) (*GetUserReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}

func RegisterArtistsServiceServer(s *grpc.Server, srv ArtistsServiceServer) {
	s.RegisterService(&_ArtistsService_serviceDesc, srv)
}

func _ArtistsService_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtistsServiceServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.ArtistsService/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtistsServiceServer).GetUser(ctx, req.(*GetUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ArtistsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.ArtistsService",
	HandlerType: (*ArtistsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUser",
			Handler:    _ArtistsService_GetUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/service/service.proto",
}
